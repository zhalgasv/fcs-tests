pipeline {
    agent any

    environment {
        E2E_BASE_URL = 'https://mn.fcs.baimly.dev'
        DOCKER_CLI_PATH = '/usr/local/bin/docker'
        DOCKER_IMAGE = 'mcr.microsoft.com/playwright:v1.55.0-jammy'
    }

    stages {
        stage('Run E2E Tests') {
            steps {
                echo "üöÄ Running Playwright E2E Tests against ${env.E2E_BASE_URL}..."

                sh """
                    ${DOCKER_CLI_PATH} pull ${DOCKER_IMAGE}
                """

                // üîê –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π auth-—Ñ–∞–π–ª
                withCredentials([file(credentialsId: 'PLAYWRIGHT_CI_AUTH_FILE', variable: 'AUTH_FILE')]) {
                    sh '''
                        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª: $AUTH_FILE"
                        if [ ! -f "$AUTH_FILE" ]; then
                          echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
                          exit 1
                        fi

                        echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å —Ñ–∞–π–ª–æ–º:"
                        ls -la $(dirname "$AUTH_FILE")

                        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                        CONTAINER_ID=$(${DOCKER_CLI_PATH} run -d \
                            -v "$(pwd):/app" \
                            -w /app \
                            -e PLAYWRIGHT_BASE_URL=''' + env.E2E_BASE_URL + ''' \
                            ''' + env.DOCKER_IMAGE + ''' tail -f /dev/null)

                        echo "üîê –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                        ${DOCKER_CLI_PATH} cp "$AUTH_FILE" $CONTAINER_ID:/app/tests/auth/ci-auth-long-life.json

                        echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã..."
                        ${DOCKER_CLI_PATH} exec $CONTAINER_ID bash -c "
                            npm ci &&
                            npx playwright test --project=chromium
                        "

                        echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
                        ${DOCKER_CLI_PATH} stop $CONTAINER_ID
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished. Status: ${currentBuild.result}"
        }
        success {
            echo '‚úÖ E2E Tests PASSED!'
        }
        failure {
            echo '‚ùå E2E Tests FAILED! Check console output for errors.'
        }
    }
}
